<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xiaohe.bean.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="accountNumber" property="accountnumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="VARCHAR" />
    <result column="bankcardNo" property="bankcardno" jdbcType="VARCHAR" />
    <result column="healthStatus" property="healthstatus" jdbcType="VARCHAR" />
    <result column="authorityId" property="authorityid" jdbcType="INTEGER" />
    <result column="levelId" property="levelid" jdbcType="INTEGER" />
    <result column="areaId" property="areaid" jdbcType="INTEGER" />
    <result column="registrationDate" property="registrationdate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="onLine" property="online" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, avatar, email, userName, password, accountNumber, sex, birthday, phone, address, 
    integral, bankcardNo, healthStatus, authorityId, levelId, areaId, registrationDate, 
    status, onLine
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaohe.bean.User" >
    insert into user (userId, avatar, email, 
      userName, password, accountNumber, 
      sex, birthday, phone, 
      address, integral, bankcardNo, 
      healthStatus, authorityId, levelId, 
      areaId, registrationDate, status, 
      onLine)
    values (#{userid,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{accountnumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{integral,jdbcType=VARCHAR}, #{bankcardno,jdbcType=VARCHAR}, 
      #{healthstatus,jdbcType=VARCHAR}, #{authorityid,jdbcType=INTEGER}, #{levelid,jdbcType=INTEGER}, 
      #{areaid,jdbcType=INTEGER}, #{registrationdate,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}, 
      #{online,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaohe.bean.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountnumber != null" >
        accountNumber,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="bankcardno != null" >
        bankcardNo,
      </if>
      <if test="healthstatus != null" >
        healthStatus,
      </if>
      <if test="authorityid != null" >
        authorityId,
      </if>
      <if test="levelid != null" >
        levelId,
      </if>
      <if test="areaid != null" >
        areaId,
      </if>
      <if test="registrationdate != null" >
        registrationDate,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="online != null" >
        onLine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=VARCHAR},
      </if>
      <if test="bankcardno != null" >
        #{bankcardno,jdbcType=VARCHAR},
      </if>
      <if test="healthstatus != null" >
        #{healthstatus,jdbcType=VARCHAR},
      </if>
      <if test="authorityid != null" >
        #{authorityid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        #{levelid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        #{areaid,jdbcType=INTEGER},
      </if>
      <if test="registrationdate != null" >
        #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="online != null" >
        #{online,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.bean.User" >
    update user
    <set >
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        accountNumber = #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=VARCHAR},
      </if>
      <if test="bankcardno != null" >
        bankcardNo = #{bankcardno,jdbcType=VARCHAR},
      </if>
      <if test="healthstatus != null" >
        healthStatus = #{healthstatus,jdbcType=VARCHAR},
      </if>
      <if test="authorityid != null" >
        authorityId = #{authorityid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        levelId = #{levelid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        areaId = #{areaid,jdbcType=INTEGER},
      </if>
      <if test="registrationdate != null" >
        registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="online != null" >
        onLine = #{online,jdbcType=BIT},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaohe.bean.User" >
    update user
    set avatar = #{avatar,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      accountNumber = #{accountnumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=VARCHAR},
      bankcardNo = #{bankcardno,jdbcType=VARCHAR},
      healthStatus = #{healthstatus,jdbcType=VARCHAR},
      authorityId = #{authorityid,jdbcType=INTEGER},
      levelId = #{levelid,jdbcType=INTEGER},
      areaId = #{areaid,jdbcType=INTEGER},
      registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      onLine = #{online,jdbcType=BIT}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  
     <!-- 自定义sql -->
     <sql id="userSql">
     	  <if test="userid != null" >
	        AND userId = #{userid,jdbcType=INTEGER}
	      </if>
     	  <if test="avatar != null" >
	        AND avatar = #{avatar,jdbcType=VARCHAR}
	      </if>
	      <if test="email != null" >
	        AND email = #{email,jdbcType=VARCHAR}
	      </if>
	      <if test="username != null" >
	        AND userName LIKE '%${username}%'
	      </if>
	      <if test="password != null" >
	        AND password = #{password,jdbcType=VARCHAR}
	      </if>
	      <if test="accountnumber != null" >
	        AND accountNumber = #{accountnumber,jdbcType=VARCHAR}
	      </if>
	      <if test="sex != null" >
	        AND sex = #{sex,jdbcType=VARCHAR}
	      </if>
	      <if test="birthday != null" >
	        AND birthday = #{birthday,jdbcType=TIMESTAMP}
	      </if>
	      <if test="phone != null" >
	        AND phone = #{phone,jdbcType=VARCHAR}
	      </if>
	      <if test="address != null" >
	        AND address = #{address,jdbcType=VARCHAR}
	      </if>
	      <if test="integral != null" >
	        AND integral = #{integral,jdbcType=VARCHAR}
	      </if>
	      <if test="bankcardno != null" >
	        AND bankcardNo = #{bankcardno,jdbcType=VARCHAR}
	      </if>
	      <if test="healthstatus != null" >
	        AND healthStatus = #{healthstatus,jdbcType=VARCHAR}
	      </if>
	      <if test="authorityid != null" >
	        AND authorityId = #{authorityid,jdbcType=INTEGER}
	      </if>
	      <if test="levelid != null" >
	        AND levelId = #{levelid,jdbcType=INTEGER}
	      </if>
	      <if test="areaid != null" >
	        AND areaId = #{areaid,jdbcType=INTEGER}
	      </if>
	      <if test="registrationdate != null" >
	        AND registrationDate = #{registrationdate,jdbcType=TIMESTAMP}
	      </if>
	      <if test="status != null" >
	        AND status = #{status,jdbcType=BIT}
	      </if>
	      <if test="online != null" >
	        AND onLine = #{online,jdbcType=BIT}
	      </if>
     
     </sql>
     
     <resultMap type="userCustom" id="userInfoMap" extends="BaseResultMap">
     
     	<association property="authority" javaType="authorityCustom">
     		<id column="authorityId" property="authorityid"></id>
     		<result column="authorityLevel" property="authoritylevel"/>
     	</association>
     	
     	<association property="level" javaType="levelCustom">
     		<id column="levelId" property="levelid"/>
     		<result column="level" property="level"/>
     	</association>
     	
     	<association property="branch" javaType="branchCustom">
     		<id column="branchId" property="branchid"/>
     		<result column="branchName" property="branchname"/>
     	</association>
     	
     	<association property="area" javaType="areaCustom">
     		<id column="areaId" property="areaid"/>
     		<result column="areaName" property="areaname"/>
     		<result column="areaAddress" property="areaaddress"/>
     	</association>
     	
     	<association property="med" javaType="MedicalrecordsWithBLOBsCustom">
     		<id column="medicalrecordsId" property="medicalrecordsid"/>
     		<result column="nowMedicalRecords" property="nowmedicalrecords"/>
     		<result column="beforeMedicalRecords" property="beforemedicalrecords"/>
     		<result column="personalRecords" property="personalrecords"/>
     		<result column="familyRecords" property="familyrecords"/>
     	</association>
     	
     	<association property="manager" javaType="EmployeeCustom">
     		<id column="employeeId" property="employeeid"/>
     		<result column="employeeName" property="employeename"/>
     	</association>
     
     </resultMap>
  <select id="queryAllUser" resultType="com.xiaohe.bean.User">
  select * from user
  </select>
  
  <!-- 根据手机号查询用户 -->
  <select id="selectUserByPhone" parameterType="String" resultType="userCustom">
	SELECT * FROM `user` WHERE phone = #{id}  
  </select>
  
  <!-- 查询分店所有用户信息 -->
   <select id="branchUserCustoms" parameterType="java.lang.Integer" resultType="com.xiaohe.bean.UserCustom" >
  SELECT u.* from user u,branch b,employee e 
  where b.employeeId = e.employeeId 
  and b.areaId = u.areaId 
  and e.employeeId = #{employeeId,jdbcType=INTEGER}
  </select>
  
  <!-- 查询分店所有用户数量 -->
  <select id="countBranchUser" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  SELECT COUNT(*)from user u,employee e,branch b
	where u.areaId = b.areaId
	and b.employeeId = e.employeeId
	and e.employeeId = #{employeeId,jdbcType=INTEGER}
  </select>
  
  <update id="changeOnLine" parameterType="userCustom">
  		UPDATE user SET `onLine` = #{online} WHERE phone = #{phone}
  </update>
  
  <select id="selectAllUserByCondition" parameterType="userCustom" resultType="userCustom">
  
  	SELECT * FROM `user`
  	<where>
  		<include refid="userSql"/>
  	</where>
  	<if test="sort != null" >
	     ORDER BY ${sort} DESC  
	</if>
   	<if test="begin != null" >
	  <if test="pageNum != null" >
	      LIMIT  #{begin} , #{pageNum};
	  </if>
  	</if>
	    
  </select>
  
  <select id="selectAllUserSumByCondition" parameterType="userCustom" resultType="Integer">
  
  	SELECT COUNT(*) FROM `user`
  	<where>
  		<include refid="userSql"/>
  	</where>
  
  </select>
  
  
  <select id="selectUserInfoById" parameterType="Integer" resultMap="userInfoMap">
  	SELECT u.* , ah.authorityLevel , l.`level` , a.areaName , a.areaAddress , b.branchId , 
		b.branchName ,b.employeeId , e.employeeName , 
		m.nowMedicalRecords , m.beforeMedicalRecords , 
		m.personalRecords , m.familyRecords , m.medicalrecordsId
		FROM `user` u, authority ah,`level` l,area a,branch b,medicalrecords m  ,employee e
		WHERE u.userId = #{id}
		AND ah.authorityId = u.authorityId AND l.levelId = u.levelId 
		AND a.areaId = u.areaId AND b.areaId =u.areaId AND e.employeeId = b.employeeId
		AND m.userId = u.userId
  </select>
  
  <select id="selectOneUser" parameterType="java.lang.Integer" resultType="com.xiaohe.bean.UserCustom">
  select * from user where userId = #{userid}
  </select>
  <select id="selectAllUser" resultType="java.lang.Integer">
  	select count(*) from user
  </select>
  <select id="selectAllUserByTime" resultType="Integer">
  	select count(*) from user 
  	group by registrationDate 
	order by registrationDate desc limit 15
  </select>
  <select id="selectfourUserByTime" resultType="com.xiaohe.bean.UserCustom">
  	select userid,avatar,userName,sex,registrationDate from user 
	order by registrationDate desc limit 4
  </select> 
  <select id="selectUserById" parameterType="java.lang.Integer" resultType="com.xiaohe.bean.UserCustom">
  	select u.*,b.* from user u, branch b
	where u.areaId= b.areaId 
	and u.userid = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectCountUserByBranch" resultType="com.xiaohe.bean.UserCustom">
  	select count(*) usernumber,branchName from user,branch
	where user.areaId = branch.areaId 
	group by user.areaId
	order by count(*) desc limit 10
  </select>
  <select id="selectAlluserandbranch" resultType="com.xiaohe.bean.UserCustom">
  	select u.*,b.* from user u,branch b
  	where u.areaId= b.areaId 
  </select>
  
  <select id="selectUserTest" parameterType="java.lang.Integer" resultType="com.xiaohe.bean.UserCustom">
  	select userid,count(*) usernumber,registrationDate from user
  	where userid = #{userid,jdbcType=INTEGER}
  	group by registrationDate
  </select>
  
  <update id="retrieveThePassword" parameterType="userCustom">
  		UPDATE user SET password = #{newPassword} WHERE phone = #{phone}
  
  </update>
</mapper>