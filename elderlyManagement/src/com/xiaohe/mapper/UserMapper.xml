<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xiaohe.bean.UserCustom" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="accountNumber" property="accountnumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="VARCHAR" />
    <result column="bankcardNo" property="bankcardno" jdbcType="VARCHAR" />
    <result column="healthStatus" property="healthstatus" jdbcType="VARCHAR" />
    <result column="authorityId" property="authorityid" jdbcType="INTEGER" />
    <result column="levelId" property="levelid" jdbcType="INTEGER" />
    <result column="areaId" property="areaid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, avatar, email, userName, password, accountNumber, sex, birthday, phone, address, 
    integral, bankcardNo, healthStatus, authorityId, levelId, areaId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaohe.bean.User" >
    insert into user (userId, avatar, email, 
      userName, password, accountNumber, 
      sex, birthday, phone, 
      address, integral, bankcardNo, 
      healthStatus, authorityId, levelId, 
      areaId)
    values (#{userid,jdbcType=INTEGER}, #{avatar,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{accountnumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{integral,jdbcType=VARCHAR}, #{bankcardno,jdbcType=VARCHAR}, 
      #{healthstatus,jdbcType=VARCHAR}, #{authorityid,jdbcType=INTEGER}, #{levelid,jdbcType=INTEGER}, 
      #{areaid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaohe.bean.UserCustom" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountnumber != null" >
        accountNumber,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="bankcardno != null" >
        bankcardNo,
      </if>
      <if test="healthstatus != null" >
        healthStatus,
      </if>
      <if test="authorityid != null" >
        authorityId,
      </if>
      <if test="levelid != null" >
        levelId,
      </if>
      <if test="areaid != null" >
        areaId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=VARCHAR},
      </if>
      <if test="bankcardno != null" >
        #{bankcardno,jdbcType=VARCHAR},
      </if>
      <if test="healthstatus != null" >
        #{healthstatus,jdbcType=VARCHAR},
      </if>
      <if test="authorityid != null" >
        #{authorityid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        #{levelid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        #{areaid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.bean.UserCustom" >
    update user
    <set >
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountnumber != null" >
        accountNumber = #{accountnumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=VARCHAR},
      </if>
      <if test="bankcardno != null" >
        bankcardNo = #{bankcardno,jdbcType=VARCHAR},
      </if>
      <if test="healthstatus != null" >
        healthStatus = #{healthstatus,jdbcType=VARCHAR},
      </if>
      <if test="authorityid != null" >
        authorityId = #{authorityid,jdbcType=INTEGER},
      </if>
      <if test="levelid != null" >
        levelId = #{levelid,jdbcType=INTEGER},
      </if>
      <if test="areaid != null" >
        areaId = #{areaid,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaohe.bean.User" >
    update user
    set avatar = #{avatar,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      accountNumber = #{accountnumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=VARCHAR},
      bankcardNo = #{bankcardno,jdbcType=VARCHAR},
      healthStatus = #{healthstatus,jdbcType=VARCHAR},
      authorityId = #{authorityid,jdbcType=INTEGER},
      levelId = #{levelid,jdbcType=INTEGER},
      areaId = #{areaid,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  
  
  <!-- 自定义sql -->
  <select id="queryAllUser" resultType="com.xiaohe.bean.User">
  select * from user
  </select>
  
  <!-- 根据手机号查询用户 -->
  <select id="selectUserByPhone" parameterType="String" resultType="userCustom">
	SELECT * FROM `user` WHERE phone = #{id}  
  </select>
</mapper>