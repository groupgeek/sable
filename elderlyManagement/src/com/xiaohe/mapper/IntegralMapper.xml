<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.mapper.IntegralMapper" >
  <resultMap id="BaseResultMap" type="com.xiaohe.bean.Integral" >
    <id column="integralId" property="integralid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="change" property="change" jdbcType="INTEGER" />
    <result column="changeTime" property="changetime" jdbcType="TIMESTAMP" />
    <result column="remainingPoints" property="remainingpoints" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    integralId, userId, details, change, changeTime, remainingPoints
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from integral
    where integralId = #{integralid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from integral
    where integralId = #{integralid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaohe.bean.Integral" >
    insert into integral (integralId, userId, details, 
      change, changeTime, remainingPoints
      )
    values (#{integralid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{details,jdbcType=VARCHAR}, 
      #{change,jdbcType=INTEGER}, #{changetime,jdbcType=TIMESTAMP}, #{remainingpoints,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaohe.bean.Integral" >
    insert into integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="integralid != null" >
        integralId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="details != null" >
        details,
      </if>
      <if test="change != null" >
        change,
      </if>
      <if test="changetime != null" >
        changeTime,
      </if>
      <if test="remainingpoints != null" >
        remainingPoints,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="integralid != null" >
        #{integralid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="change != null" >
        #{change,jdbcType=INTEGER},
      </if>
      <if test="changetime != null" >
        #{changetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remainingpoints != null" >
        #{remainingpoints,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.bean.Integral" >
    update integral
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="change != null" >
        change = #{change,jdbcType=INTEGER},
      </if>
      <if test="changetime != null" >
        changeTime = #{changetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remainingpoints != null" >
        remainingPoints = #{remainingpoints,jdbcType=INTEGER},
      </if>
    </set>
    where integralId = #{integralid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaohe.bean.Integral" >
    update integral
    set userId = #{userid,jdbcType=INTEGER},
      details = #{details,jdbcType=VARCHAR},
      change = #{change,jdbcType=INTEGER},
      changeTime = #{changetime,jdbcType=TIMESTAMP},
      remainingPoints = #{remainingpoints,jdbcType=INTEGER}
    where integralId = #{integralid,jdbcType=INTEGER}
  </update>
  
  <sql id="integralSql">
  	<if test="integralid != null" >
        AND integralId = #{integralid,jdbcType=INTEGER}
      </if>
	  <if test="userid != null" >
        AND userId = #{userid,jdbcType=INTEGER}
      </if>
      <if test="details != null" >
        AND details = #{details,jdbcType=VARCHAR}
      </if>
      <if test="change != null" >
        AND change = #{change,jdbcType=INTEGER}
      </if>
      <if test="changetime != null" >
        AND changeTime = #{changetime,jdbcType=TIMESTAMP}
      </if>
      <if test="remainingpoints != null" >
        AND remainingPoints = #{remainingpoints,jdbcType=INTEGER}
      </if>
  </sql>
  
  <select id="selectIntegralByCondition" parameterType="IntegralCustom" resultType="IntegralCustom">
  	SELECT * FROM `integral`
	<where>
	  <include refid="integralSql"></include>
	</where>	
	ORDER BY changeTime DESC
	
	<if test="begin != null" >
	  <if test="pageNum != null" >
	      LIMIT  #{begin} , #{pageNum};
	  </if>
  	</if>
  
  </select>
  
  <select id="selectUpToDateRecord" parameterType="IntegralCustom" resultType="IntegralCustom">
  	SELECT * FROM `integral`
	<where>
	  <include refid="integralSql"></include>
	</where>
  	ORDER BY changeTime DESC LIMIT  0,1
  
  </select>
</mapper>