<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.mapper.TotalreportMapper" >
  <resultMap id="BaseResultMap" type="com.xiaohe.bean.Totalreport" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="totalPrice" property="totalprice" jdbcType="DECIMAL" />
    <result column="totalExpenditure" property="totalexpenditure" jdbcType="DECIMAL" />
    <result column="branchId" property="branchid" jdbcType="INTEGER" />
    <result column="duringTime" property="duringtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, totalPrice, totalExpenditure, branchId, duringTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from totalreport
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from totalreport
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaohe.bean.Totalreport" >
    insert into totalreport (id, totalPrice, totalExpenditure, 
      branchId, duringTime)
    values (#{id,jdbcType=INTEGER}, #{totalprice,jdbcType=DECIMAL}, #{totalexpenditure,jdbcType=DECIMAL}, 
      #{branchid,jdbcType=INTEGER}, #{duringtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaohe.bean.Totalreport" >
    insert into totalreport
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="totalprice != null" >
        totalPrice,
      </if>
      <if test="totalexpenditure != null" >
        totalExpenditure,
      </if>
      <if test="branchid != null" >
        branchId,
      </if>
      <if test="duringtime != null" >
        duringTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null" >
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="totalexpenditure != null" >
        #{totalexpenditure,jdbcType=DECIMAL},
      </if>
      <if test="branchid != null" >
        #{branchid,jdbcType=INTEGER},
      </if>
      <if test="duringtime != null" >
        #{duringtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.bean.Totalreport" >
    update totalreport
    <set >
      <if test="totalprice != null" >
        totalPrice = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="totalexpenditure != null" >
        totalExpenditure = #{totalexpenditure,jdbcType=DECIMAL},
      </if>
      <if test="branchid != null" >
        branchId = #{branchid,jdbcType=INTEGER},
      </if>
      <if test="duringtime != null" >
        duringTime = #{duringtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaohe.bean.Totalreport" >
    update totalreport
    set totalPrice = #{totalprice,jdbcType=DECIMAL},
      totalExpenditure = #{totalexpenditure,jdbcType=DECIMAL},
      branchId = #{branchid,jdbcType=INTEGER},
      duringTime = #{duringtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTotalreportSum" resultType="DECIMAL">
  	select sum(totalPrice - totalExpenditure) stringmoney 
  	from totalreport 
  </select>
  <select id="selectTotalreportSumByTime" resultType="DECIMAL">
  	select sum(totalPrice - totalExpenditure) stringmoney
  	from totalreport
  	where date_format(duringtime, '%Y-%m-%d')
	group by duringtime order by duringTime desc limit 15
  </select>
  
  <select id="selectTotalreportAndBranch" resultType="com.xiaohe.bean.CeoTotalreport">
  	select sum(t.totalPrice - t.totalExpenditure) sumBigDecimal,b.branchName 
	from totalreport t,branch b
	where t.branchId = b.branchId
	group by t.branchId
	order by sum(t.totalPrice - t.totalExpenditure) desc limit 10
  </select>
  <select id="selectBranchTotalreport" parameterType="java.lang.Integer" resultType="com.xiaohe.bean.CeoTotalreport">
  	select b.branchname,sum(t.totalPrice) sumtotalprice,sum(t.totalExpenditure) sumtotalexpenditure
	from branch b,totalreport t
	where b.branchId=t.branchId
	and b.branchId=#{branchid,jdbcType=INTEGER}
  </select>
  <select id="selectTotalreports" parameterType="com.xiaohe.bean.CeoTotalreport" resultType="com.xiaohe.bean.CeoTotalreport">
  	seelct b.*,sum(t.totalPrice) sumtotalprice,sum(t.totalExpenditure) sumtotalexpenditure
  	from branch b,totalreport t
	<where>
  			t.branchid = b.branchid
  		<if test="branchid != null">
  			AND b.branchid = #{branchid}
  		</if>
  		
  		<if test="startingTime != null">
			<if test="endTime != null">
				AND duringtime BETWEEN #{startingTime} AND #{endTime}
			</if>
		</if>
  	</where>
  	
  	<if test="sort != null">
  		    ORDER BY #{sort}
  	</if>
  	<if test="begin != null">
		<if test="pageNum != null">
			LIMIT #{begin} , #{pageNum};
		</if>
	</if>
  </select>
  <select id="selectBranchMoney" parameterType="com.xiaohe.bean.CeoTotalreport" resultType="com.xiaohe.bean.CeoTotalreport">
   	select b.branchname,sum(t.totalPrice) sumtotalprice,sum(t.totalExpenditure) sumtotalexpenditure
	from branch b,totalreport t
	where b.branchId=t.branchId
	and b.branchId=#{branchid,jdbcType=INTEGER}
  </select>
  <select id="CeoTotalreportByTime" resultType="com.xiaohe.bean.CeoTotalreport">
  	SELECT sum(totalPrice-totalExpenditure) bigdecimals,duringTime FROM totalreport
	where duringTime>DATE_SUB(CURDATE(), INTERVAL 1 YEAR) 
	group by date_format(duringTime,'%Y-%m')
  </select>
  
  <select id="selectPtByTimeInterval" parameterType="ProducttransactionreportCustom" resultType="ProducttransactionreportCustom">
  	SELECT * FROM `producttransactionreport`
	WHERE productId = #{productid}
	AND BuyTime BETWEEN #{startingTime} AND #{endTime}
  </select>
  
</mapper>