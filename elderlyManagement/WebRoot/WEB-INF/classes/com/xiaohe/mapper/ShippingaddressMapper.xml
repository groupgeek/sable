<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaohe.mapper.ShippingaddressMapper" >
  <resultMap id="BaseResultMap" type="com.xiaohe.bean.Shippingaddress" >
    <id column="shippingAddressId" property="shippingaddressid" jdbcType="INTEGER" />
    <result column="shippingAddress" property="shippingaddress" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="defaultAddress" property="defaultaddress" jdbcType="BIT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    shippingAddressId, shippingAddress, userId, defaultAddress, phone, receiver
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shippingaddress
    where shippingAddressId = #{shippingaddressid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shippingaddress
    where shippingAddressId = #{shippingaddressid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaohe.bean.Shippingaddress" >
    insert into shippingaddress (shippingAddressId, shippingAddress, 
      userId, defaultAddress, phone, 
      receiver)
    values (#{shippingaddressid,jdbcType=INTEGER}, #{shippingaddress,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{defaultaddress,jdbcType=BIT}, #{phone,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaohe.bean.Shippingaddress" >
  	<selectKey keyProperty="shippingaddressid" order="AFTER" resultType="Integer">
  		SELECT LAST_INSERT_ID();
  	</selectKey>
    insert into shippingaddress
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shippingaddressid != null" >
        shippingAddressId,
      </if>
      <if test="shippingaddress != null" >
        shippingAddress,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="defaultaddress != null" >
        defaultAddress,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shippingaddressid != null" >
        #{shippingaddressid,jdbcType=INTEGER},
      </if>
      <if test="shippingaddress != null" >
        #{shippingaddress,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="defaultaddress != null" >
        #{defaultaddress,jdbcType=BIT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaohe.bean.Shippingaddress" >
    update shippingaddress
    <set >
      <if test="shippingaddress != null" >
        shippingAddress = #{shippingaddress,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="defaultaddress != null" >
        defaultAddress = #{defaultaddress,jdbcType=BIT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
    </set>
    where shippingAddressId = #{shippingaddressid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaohe.bean.Shippingaddress" >
    update shippingaddress
    set shippingAddress = #{shippingaddress,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      defaultAddress = #{defaultaddress,jdbcType=BIT},
      phone = #{phone,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR}
    where shippingAddressId = #{shippingaddressid,jdbcType=INTEGER}
  </update>
  <select id="selectAllAddressByUserid" parameterType="Integer" resultType="ShippingAddressCustom">
  	SELECT * FROM shippingAddress WHERE userId = #{id}
  </select>
  
  <select id="selectDefaultAddressByByUserid" parameterType="Integer" resultType="ShippingAddressCustom">
  	SELECT * FROM `shippingaddress`
	WHERE userId = #{id} AND defaultAddress = 1
  </select>
  
</mapper>